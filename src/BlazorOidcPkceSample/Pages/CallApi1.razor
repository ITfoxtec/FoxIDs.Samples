@page "/callapi1"
@using System.Net.Http.Headers;
@using Microsoft.AspNetCore.Authorization
@using Microsoft.AspNetCore.Components.WebAssembly.Authentication
@using Microsoft.Extensions.Configuration
@attribute [Authorize]
@inject HttpClient httpClient
@inject IConfiguration Configuration
@inject IAccessTokenProvider AuthenticationService

<h1>Call AspNetCoreApi1Sample</h1>

<p>This component demonstrates fetching data from the server.</p>

@if (api1Result == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <h3>Result</h3>
    <pre>@api1Result</pre>
}

@code {
    private string api1Result;

    protected override async Task OnInitializedAsync()
    {
        var tokenResult = await AuthenticationService.RequestAccessToken();

        if (tokenResult.TryGetToken(out var token))
        {
            // Automatically adding access token currently do not work
            httpClient.DefaultRequestHeaders.Authorization = new AuthenticationHeaderValue("Bearer", token.Value);

            try
            {
                var aspNetCoreApi1SampleUrl = Configuration["AppSettings:AspNetCoreApi1SampleUrl"];
                api1Result = await httpClient.GetStringAsync(aspNetCoreApi1SampleUrl, "1234");
            }
            catch (AccessTokenNotAvailableException exception)
            {
                exception.Redirect();
            }
        }
    }
}
